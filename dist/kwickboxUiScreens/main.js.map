{"version":3,"sources":["./src/environments/environment.ts","./src/app/qwerty/qwerty.component.html","./src/app/qwerty/qwerty.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/bhaskar/bhaskar.component.ts","./src/app/bhaskar/bhaskar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n<div class=\"AddEmployeeTitleContainer\">\n    <div class=\"addEmployeeTitleContainer\">\n      <div >Add Employee</div>\n  </div>\n  <div class=\"addEmployeeBtnContainer\">\n    <div class=\"addNewEmployeeBtn\" (click)=\"addNewEmployeeBtn()\">+</div>\n  </div>\n  </div>\n  <div *ngIf=\"newEmployeeClicked\">\n  <div class=\"formWrapper\">\n  <form>\n    <div class=\"form-group name\">\n      <!-- <label for=\"name\">Name:</label> -->\n      <input type=\"text\"\n             class=\"form-control input\"\n             id=\"name\"\n             name=\"name\"\n             [(ngModel)]=\"model.name\"\n             placeholder=\"Name\">\n    </div>\n     <div class=\"form-group position\">\n      <!-- <label for=\"position\">Position:</label> -->\n      <input type=\"text\"\n             class=\"form-control positionInput\"\n             id=\"position\"\n             name=\"position\"\n             [(ngModel)]=\"model.position\"\n             placeholder=\"Position\">\n    </div>\n    <div class=\"submitBtnContainer\">\n      <button type=\"submit\" class=\"saveBtn\" (click)=\"addEmployee()\">SAVE</button>\n    </div>\n  </form>\n  </div>\n  </div>\n  \n  \n  <div class=\"tableWrapper\">\n  <div class=\"containerTitle\">\n    <div class=\"oneTitle\">Name</div>\n    <div class=\"twoTitle\">Position</div>\n    <div class=\"threeTitle\">Actions</div>\n    <!-- <div class=\"four\"></div> -->\n  </div>\n  \n  <div class=\"containerListItems\" *ngFor=\"let employee of employees; let i = index\" [style.background-color]=\"changeColorOne()\">\n    <div class=\"one\">{{employee.name}}</div>\n    <div class=\"two\">{{employee.position}}</div>\n    <div class=\"three\">\n      <button (click)=\"editEmployee(i)\">Edit</button>\n      <button (click)=\"deleteEmployee(i)\">Delete</button>\n    </div>\n    \n  </div>\n  </div>\n\n  <div class=\"editEmployeeTitleContainer\">\n    <div class=\"\">Edit Employee</div>\n  </div>\n  \n  <form>\n    <div class=\"form-group name\">\n      <!-- <label for=\"name\">Name:</label> -->\n      <input type=\"text\"\n             class=\"form-control\"\n             id=\"name\"\n             name=\"name\"\n             [(ngModel)]=\"model2.name\"\n             placeholder=\"Name\">\n    </div>\n  \n     <div class=\"form-group position\">\n      <!-- <label for=\"position\">Position:</label> -->\n      <input type=\"text\"\n             class=\"form-control\"\n             id=\"position\"\n             name=\"position\"\n             [(ngModel)]=\"model2.position\"\n             placeholder=\"Position\">\n    </div>\n    <button type=\"submit\" (click)=\"updateEmployee()\">Update</button>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qwerty',\n  templateUrl: './qwerty.component.html',\n  styleUrls: ['./qwerty.component.scss']\n})\nexport class QwertyComponent implements OnInit {\n  newEmployeeClicked = false;\n\n  employees = [\n    { name: 'Raj sekhar', position: 'Full Stack Dev'},\n    { name: 'Ram Prasad', position: 'Recruiter Manager'},\n    { name: 'Bhaskar Charan', position: 'Intern'}\n  ];\n\n  color;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  model: any = {};\n  model2: any = {}; \n\n  addEmployee() {\n    this.employees.push(this.model);\n    this.model = {};\n  }\n  deleteEmployee(i) {\n    this.employees.splice(i);\n    console.log(i);\n  }\n\n  myValue;\n\n  editEmployee(editEmployeeInfo) {\n    this.model2.name = this.employees[editEmployeeInfo].name;\n    this.model2.position = this.employees[editEmployeeInfo].position;\n    this.myValue = editEmployeeInfo;\n  }\n\n  updateEmployee() {\n    let editEmployeeInfo = this.myValue;\n    for(let i = 0; i < this.employees.length; i++) {\n      if(i == editEmployeeInfo) {\n        this.employees[i] = this.model2;\n        this.model2 = {};\n      }\n    }\n  }\n\n\n  addNewEmployeeBtn() {\n    this.newEmployeeClicked = !this.newEmployeeClicked;\n  }\n\n   changeColorOne() {\n     this.color = !this.color;\n     if (this.color) {\n       return '#ffffff';\n     } else {\n      return '#f6f6f6';\n     }\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'kwickboxUiScreens';\n}\n","<\n<app-qwerty></app-qwerty>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NbThemeModule, NbLayoutModule, NbButtonModule,NbCardModule } from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { BhaskarComponent } from './bhaskar/bhaskar.component';\nimport { QwertyComponent } from './qwerty/qwerty.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BhaskarComponent,\n    QwertyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NbThemeModule.forRoot({ name: 'cosmic' }),\n    NbLayoutModule,\n    NbEvaIconsModule,\n    NbButtonModule,\n    NbCardModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bhaskar',\n  templateUrl: './bhaskar.component.html',\n  styleUrls: ['./bhaskar.component.scss']\n})\nexport class BhaskarComponent implements OnInit {\n  public hello = \"\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClick(_$event: any){\n    this.hello =\"welcome\"\n  }\n\n}\n","<p>bhaskar works!</p>\n\n\n<h2>Add a border to a table:</h2>\n\n<table>\n  <tr>\n    <th>Firstname</th>\n    <th>Lastname</th>\n  </tr>\n  <tr>\n    <td>Peter</td>\n    <td>Griffin</td>\n  </tr>\n  <tr>\n    <td>Lois</td>\n    <td>Griffin</td>\n  </tr>\n</table>\n\n\n<nb-card>\n  <nb-card-header>Button</nb-card-header>\n  <nb-card-body class=\"example-items-rows\">\n    <button nbButton (click) = \"onClick($event)\">Active</button>\n    {{hello}}\n    <button nbButton disabled>Disabled</button>\n  </nb-card-body>\n</nb-card>\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}